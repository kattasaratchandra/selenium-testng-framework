please refer to the following notes for the code implementation:

- Introduced a `BaseTest` abstract class to centralize WebDriver setup and teardown using
TestNG annotations.
- Implemented a `Driver` utility class to manage WebDriver initialization and cleanup,
ensuring browser sessions are handled per test.
- Added a `DriverManager` class using `ThreadLocal<WebDriver>` for thread-safe driver
management, supporting parallel test execution.
- Used `final` for test classes and utility classes (`Driver`, `DriverManager`) to
prevent inheritance and enforce immutability.
- Defined private constructors in utility classes to prevent instantiation.
- Created simple, final test classes (`GoogleHomePageTest`, `GoogleLoginPageTest`)
that extend `BaseTest` and contain only test logic.
- Configured `testng.xml` for parallel method execution to leverage thread-local
WebDriver instances.

FrameworkConstants.java
  - Stores all important file paths (like the config file) as constants in one place.
  - Marked as `final` to prevent inheritance, so no other class can extend it.
  - Has a private constructor to prevent instantiation, ensuring it is only used as a utility class.
  - This design enforces immutability and consistent usage of constants across the framework.

ReadPropertyFile.java:
  - Loads all settings from the config file once at startup.
  - Stores settings in a fast-access map for quick retrieval.
  - Throws clear errors if a requested setting does not exist.
  - Uses logging for better traceability and debugging.

